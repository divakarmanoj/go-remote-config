<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="311d5dea-585b-4731-8306-a2ec96d4bb68" name="Changes" comment="Server">
      <change afterPath="$PROJECT_DIR$/server/server.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/server/server_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/client.go" beforeDir="false" afterPath="$PROJECT_DIR$/client/client.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/client_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/client/client_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/source/file_repository.go" beforeDir="false" afterPath="$PROJECT_DIR$/source/file_repository.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/source/git_repository.go" beforeDir="false" afterPath="$PROJECT_DIR$/source/git_repository.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/source/repository.go" beforeDir="false" afterPath="$PROJECT_DIR$/source/repository.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/source/web_repository.go" beforeDir="false" afterPath="$PROJECT_DIR$/source/web_repository.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/test.yaml" beforeDir="false" afterPath="$PROJECT_DIR$/test.yaml" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file://$USER_HOME$/go/go1.20.5" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProjectId" id="2TAwbvHjDGClieFrVZpKkgYkimo" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "DefaultGoTemplateProperty": "Go File",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.go.formatter.settings.were.checked": "true",
    "RunOnceActivity.go.migrated.go.modules.settings": "true",
    "RunOnceActivity.go.modules.go.list.on.any.changes.was.set": "true",
    "WebServerToolWindowFactoryState": "false",
    "git-widget-placeholder": "go-only",
    "go.import.settings.migrated": "true",
    "go.sdk.automatically.set": "true",
    "last_opened_file_path": "/Users/divakarmanoj/dev/go/src/go-remote-config",
    "node.js.detected.package.eslint": "true",
    "node.js.selected.package.eslint": "(autodetect)"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/client" />
    </key>
  </component>
  <component name="RunManager" selected="Go Test.TestNewServer in github.com/divakarmanoj/go-remote-config/servers">
    <configuration name="TestNewClient/FileRepository in github.com/divakarmanoj/go-remote-config" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="go-remote-config" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/divakarmanoj/go-remote-config" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestNewClient\E$/^\QFileRepository\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestNewClient/gitRepository in github.com/divakarmanoj/go-remote-config" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="go-remote-config" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/divakarmanoj/go-remote-config" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestNewClient\E$/^\QgitRepository\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestNewRaceClient in github.com/divakarmanoj/go-remote-config" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="go-remote-config" />
      <working_directory value="$PROJECT_DIR$" />
      <go_parameters value="-race" />
      <kind value="PACKAGE" />
      <package value="github.com/divakarmanoj/go-remote-config" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestNewRaceClient\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestNewRaceClient/gitRepository in github.com/divakarmanoj/go-remote-config" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="go-remote-config" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/divakarmanoj/go-remote-config" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestNewRaceClient\E$/^\QgitRepository\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestNewServer in github.com/divakarmanoj/go-remote-config/servers" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="go-remote-config" />
      <working_directory value="$PROJECT_DIR$/servers" />
      <go_parameters value="-race" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/divakarmanoj/go-remote-config/servers" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestNewServer\E$" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Go Test.TestNewServer in github.com/divakarmanoj/go-remote-config/servers" />
        <item itemvalue="Go Test.TestNewClient/FileRepository in github.com/divakarmanoj/go-remote-config" />
        <item itemvalue="Go Test.TestNewRaceClient in github.com/divakarmanoj/go-remote-config" />
        <item itemvalue="Go Test.TestNewRaceClient/gitRepository in github.com/divakarmanoj/go-remote-config" />
        <item itemvalue="Go Test.TestNewClient/gitRepository in github.com/divakarmanoj/go-remote-config" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Added test and changes config" />
    <MESSAGE value="Added Test and fixed race condition" />
    <MESSAGE value="Server" />
    <option name="LAST_COMMIT_MESSAGE" value="Server" />
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$USER_HOME$/go/pkg/mod/github.com/go-git/go-git/v5@v5.8.0/worktree.go</url>
          <line>106</line>
          <option name="timeStamp" value="13" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/source/git_repository.go</url>
          <line>53</line>
          <option name="timeStamp" value="16" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/server/server.go</url>
          <line>42</line>
          <option name="timeStamp" value="18" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/source/git_repository.go</url>
          <line>107</line>
          <option name="timeStamp" value="19" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
</project>